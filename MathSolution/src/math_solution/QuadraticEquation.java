/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package math_solution;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Naeem ur Rahman
 */
public class QuadraticEquation extends javax.swing.JFrame {

    /**
     * Creates new form QuadraticEquation
     */
    public QuadraticEquation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void solve() {

        float a = Float.parseFloat(txtA.getText().trim());
        float b = Float.parseFloat(txtB.getText().trim());
        float c = Float.parseFloat(txtC.getText().trim());
        double dis = (b * b) - 4 * a * c;
        txtDisc.setText(Double.toString(dis));
        if (dis > 0.0) {

            txtNature.setText("Real,Distinct");
            double r1 = (-b + Math.pow(dis, 0.5)) / (2.0 * a);
            double r2 = (-b - Math.pow(dis, 0.5)) / (2.0 * a);
            txtr1.setText(Double.toString(r1));
            txtr2.setText(Double.toString(r2));
        } else if (dis == 0) {

            txtNature.setText("Real,Equal");
            double r = -b / (2.0 * a);
            txtr1.setText(Double.toString(r));
            txtr2.setText(Double.toString(r));
        } else {

            txtNature.setText("Imaginary");
            double r1 = (-b + Math.pow(dis, 0.5)) / (2.0 * a);
            double r2 = (-b - Math.pow(dis, 0.5)) / (2.0 * a);
            txtr1.setText(Double.toString(r1));
            txtr2.setText(Double.toString(r2));
        }
    }

    private boolean valid() {
        if (txtA.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(QuadraticEquation.this, "Enter Value a", null, JOptionPane.ERROR_MESSAGE);
            txtA.grabFocus();
            return false;
        }
        if (txtB.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(QuadraticEquation.this, "Enter Value b", null, JOptionPane.ERROR_MESSAGE);
            txtB.grabFocus();
            return false;
        }
        if (txtC.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(QuadraticEquation.this, "Enter Value c", null, JOptionPane.ERROR_MESSAGE);
            txtC.grabFocus();
            return false;
        }
        return true;
    }

    private void set() {
        txtA.setText("");
        txtB.setText("");
        txtC.setText("");
        txtDisc.setText("");
        txtNature.setText("");
        txtr1.setText("");
        txtr2.setText("");
        txtA.grabFocus();
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labmain = new javax.swing.JLabel();
        LabA = new javax.swing.JLabel();
        txtA = new javax.swing.JTextField();
        LabB = new javax.swing.JLabel();
        txtB = new javax.swing.JTextField();
        LabC = new javax.swing.JLabel();
        txtC = new javax.swing.JTextField();
        LabDisc = new javax.swing.JLabel();
        txtDisc = new javax.swing.JTextField();
        LabNature = new javax.swing.JLabel();
        txtNature = new javax.swing.JTextField();
        Labr1 = new javax.swing.JLabel();
        txtr1 = new javax.swing.JTextField();
        Labr2 = new javax.swing.JLabel();
        txtr2 = new javax.swing.JTextField();
        btnClose = new javax.swing.JButton();
        btnRun = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quadratic Eqation");
        setResizable(false);

        labmain.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        labmain.setText("Find Roots of Quadratic Equations and it`s Nature");

        LabA.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LabA.setText("a:");

        txtA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAActionPerformed(evt);
            }
        });
        txtA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAKeyPressed(evt);
            }
        });

        LabB.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LabB.setText("b:");

        txtB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBActionPerformed(evt);
            }
        });
        txtB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBKeyPressed(evt);
            }
        });

        LabC.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LabC.setText("c:");

        txtC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCKeyPressed(evt);
            }
        });

        LabDisc.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LabDisc.setText("Discriminant     : ");

        LabNature.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LabNature.setText("Nature of Roots :");

        Labr1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Labr1.setText("x =");

        Labr2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Labr2.setText("x =");

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnRun.setText("Run");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labmain, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabA)
                                    .addComponent(LabB)
                                    .addComponent(LabC))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtA)
                                    .addComponent(txtB)
                                    .addComponent(txtC, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabDisc)
                                    .addComponent(LabNature))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDisc)
                                    .addComponent(txtNature, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Labr1)
                                    .addComponent(Labr2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtr1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtr2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRun)
                        .addGap(79, 79, 79))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labmain, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabA)
                    .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabB)
                    .addComponent(txtB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabC))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabDisc)
                    .addComponent(txtDisc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabNature)
                    .addComponent(txtNature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Labr1)
                    .addComponent(txtr1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Labr2)
                    .addComponent(txtr2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnRun)
                    .addComponent(btnReset))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
  
        if(valid()){
            solve();
            btnReset.grabFocus();
        }
    }//GEN-LAST:event_btnRunActionPerformed

    private void txtAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAActionPerformed

    private void txtBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBActionPerformed

    private void txtAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
        if(valid()){
            solve();
          btnReset.grabFocus();
        }
        }
        return;
    }//GEN-LAST:event_txtAKeyPressed

    private void txtBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBKeyPressed
      if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
        if(valid()){
            solve();
            btnReset.grabFocus();
        }
        }
       return;
    }//GEN-LAST:event_txtBKeyPressed

    private void txtCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCKeyPressed
          if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
        if(valid()){
            solve();
            btnReset.grabFocus();
        }
        }
       return;
    }//GEN-LAST:event_txtCKeyPressed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        set();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
       this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuadraticEquation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuadraticEquation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuadraticEquation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuadraticEquation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuadraticEquation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabA;
    private javax.swing.JLabel LabB;
    private javax.swing.JLabel LabC;
    private javax.swing.JLabel LabDisc;
    private javax.swing.JLabel LabNature;
    private javax.swing.JLabel Labr1;
    private javax.swing.JLabel Labr2;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnRun;
    private javax.swing.JLabel labmain;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtB;
    private javax.swing.JTextField txtC;
    private javax.swing.JTextField txtDisc;
    private javax.swing.JTextField txtNature;
    private javax.swing.JTextField txtr1;
    private javax.swing.JTextField txtr2;
    // End of variables declaration//GEN-END:variables
}
